# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/sidekiq-failures/all/sidekiq-failures.rbi
#
# sidekiq-failures-1.0.0
module Sidekiq
  def self.failures_default_mode; end
  def self.failures_default_mode=(mode); end
  def self.failures_max_count; end
  def self.failures_max_count=(value); end
end
module Sidekiq::Failures
  def self.count; end
  def self.reset_failures; end
  def self.retry_middleware_class; end
end
class Sidekiq::SortedEntry < Sidekiq::Job
  def retry_failure; end
  def super_initialize(parent, score, item); end
end
class Sidekiq::Failures::FailureSet < Sidekiq::JobSet
  def initialize; end
  def retry_all_failures; end
end
class Sidekiq::Failures::Middleware
  def call(worker, msg, queue); end
  def default_max_retries; end
  def exhausted?; end
  def failure_mode; end
  def failure_mode_exhausted?; end
  def failure_mode_off?; end
  def hostname; end
  def identity; end
  def max_retries; end
  def msg; end
  def msg=(arg0); end
  def retriable?; end
  def retry_count; end
  def retry_middleware; end
  def skip_failure?; end
end
module Sidekiq::Failures::WebExtension
  def self.registered(app); end
end
class Sidekiq::WebAction
  def safe_relative_time(time); end
end
